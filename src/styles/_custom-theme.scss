// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@import '@angular/material/theming';
// Plus imports for other components in your app.
@import '/projects/rob-lib/src/styles/theming';
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-component-typographies();
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rob-library-primary: mat.define-palette($breaking-bad-primary);
$rob-library-accent: mat.define-palette($breaking-bad-accent);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rob-library-theme: mat.define-light-theme((
  color: (
    primary: $rob-library-primary,
    accent: $rob-library-accent,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));

@include set-theme($rob-library-theme);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

mat-select {
  $accent: map-get($rob-library-theme, accent);

  .mat-select-value-text,
  .mat-select-arrow {
    color: mat-color($accent, 400);
  }
}

mat-expansion-panel {
  $primary: map-get($rob-library-theme, primary);

  &-header, &-header:focus {
    background: mat-color($primary, 200);
    &:hover {
      background: mat-color($primary, 200);
    }
  }
  .mat-expansion-panel-body {
    padding-top: 10px;
  }
}

.cdk-overlay-pane {
  background: #fff;
  box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
}