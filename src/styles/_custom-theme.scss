// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// @import '@angular/material/theming';    
// Plus imports for other components in your app.
@import '/projects/rob-lib/src/styles/theming';
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.all-component-typographies();
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rob-library-primary: mat.define-palette($breaking-bad-primary);
$rob-library-accent: mat.define-palette($breaking-bad-accent);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rob-library-theme: mat.define-light-theme((
  color: (
    primary: $rob-library-primary,
    accent: $rob-library-accent,
  ),
  typography: mat.define-typography-config(),
  density: 0,
));

// The following mixins include base theme styles that are only needed once per application. These
// theme styles do not depend on the color, typography, or density settings in your theme. However,
// these styles may differ depending on the theme's design system. Currently all themes use the
// Material 2 design system, but in the future it may be possible to create theme based on other
// design systems, such as Material 3.
//
// Please note: you do not need to include the 'base' mixins, if you include the corresponding
// 'theme' mixin elsewhere in your Sass. The full 'theme' mixins already include the base styles.
//
// To learn more about "base" theme styles visit our theming guide:
// https://material.angular.io/guide/theming#theming-dimensions
//
// TODO(v17): Please move these @include statements to the preferred place in your Sass, and pass
// your theme to them. This will ensure the correct values for your app are included.
@include mat.all-component-bases($rob-library-theme);
@include set-theme($rob-library-theme);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

mat-select {
  $accent: map-get($rob-library-theme, accent);

  .mat-select-value-text,
  .mat-select-arrow {
    color: map-get($accent, 400);
  }
}

mat-expansion-panel {  
  $primary: map-get($rob-library-theme, primary);
  
  &-header, &-header:focus {
    background:  map-get($primary, 200);
    @debug map-get($primary, 200);
    &:hover {
      background:  map-get($primary, 200);
    }
  }
  .mat-expansion-panel-body {
    padding-top: 10px;
  }
}

.cdk-overlay-pane {
  background: #fff;
  box-shadow: 0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12);
}